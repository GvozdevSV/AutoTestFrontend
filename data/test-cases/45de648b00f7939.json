{
  "uid" : "45de648b00f7939",
  "name" : "Checking the field form",
  "fullName" : "tests.form_test.TestFormPage#test_form",
  "historyId" : "b1fa58668ddd909cdb6ebae9edac54f9",
  "time" : {
    "start" : 1717142218765,
    "stop" : 1717142224336,
    "duration" : 5571
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <form_test.TestForm.TestFormPage object at 0x7f3f545c90f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"898be5f699c7ef453f516030194bf59d\")>\n\n    @allure.title('Checking the field form')\n    def test_form(self, driver):\n        form_page = FormPage(driver, 'https://demoqa.com/automation-practice-form')\n        form_page.open()\n>       person_input = form_page.fill_form_fields()\n\ntests/form_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/form_page.py:19: in fill_form_fields\n    self.element_is_visible(self.locators.FIRST_NAME_INPUT).send_keys(person.first_name)\npages/base_page.py:17: in element_is_visible\n    return wait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"898be5f699c7ef453f516030194bf59d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f3f4f7d9360>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1717142068781,
      "stop" : 1717142068801,
      "duration" : 20
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1717142218013,
      "stop" : 1717142218765,
      "duration" : 752
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <form_test.TestForm.TestFormPage object at 0x7f3f545c90f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"898be5f699c7ef453f516030194bf59d\")>\n\n    @allure.title('Checking the field form')\n    def test_form(self, driver):\n        form_page = FormPage(driver, 'https://demoqa.com/automation-practice-form')\n        form_page.open()\n>       person_input = form_page.fill_form_fields()\n\ntests/form_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/form_page.py:19: in fill_form_fields\n    self.element_is_visible(self.locators.FIRST_NAME_INPUT).send_keys(person.first_name)\npages/base_page.py:17: in element_is_visible\n    return wait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"898be5f699c7ef453f516030194bf59d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f3f4f7d9360>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
    "steps" : [ {
      "name" : "открыть",
      "time" : {
        "start" : 1717142218766,
        "stop" : 1717142219251,
        "duration" : 485
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "заполнение всех полей",
      "time" : {
        "start" : 1717142219251,
        "stop" : 1717142224336,
        "duration" : 5085
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/pages/form_page.py\", line 19, in fill_form_fields\n    self.element_is_visible(self.locators.FIRST_NAME_INPUT).send_keys(person.first_name)\n  File \"/usr/local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/pages/base_page.py\", line 17, in element_is_visible\n    return wait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n  File \"/usr/local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "элемент видим",
        "time" : {
          "start" : 1717142219252,
          "stop" : 1717142224335,
          "duration" : 5083
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
        "statusTrace" : "  File \"/usr/local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/pages/base_page.py\", line 17, in element_is_visible\n    return wait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n  File \"/usr/local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "locator",
          "value" : "('css selector', 'input[id=\"firstName\"]')"
        }, {
          "name" : "timeout",
          "value" : "5"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1717142224342,
      "stop" : 1717142224398,
      "duration" : 56
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Form"
  }, {
    "name" : "feature",
    "value" : "Test form"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestForm"
  }, {
    "name" : "host",
    "value" : "178642fccf3a"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.form_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "45de648b00f7939.json",
  "parameterValues" : [ ]
}